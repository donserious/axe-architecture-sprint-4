@startuml
actor Client
participant "Shop API" as API
participant "Cache" as Cache
participant "Primary Database" as DB1
participant "Secondary Database" as DB2

== Чтение списка заказов ==
Client -> API : Запрос списка заказов
API -> Cache : Проверка кэша
alt Кэш найден
    Cache -> API : Возврат кэшированных данных
    API -> Client : Возврат списка заказов
else Кэш не найден
    Cache -> API : Данные не найдены
    API -> DB1 : Запрос списка заказов
    DB1 -> API : Возврат списка заказов
    API -> Cache : Кэширование данных
    alt Ошибка кэширования
        Cache -> API : Ошибка кэширования
        API -> Client : Возврат списка заказов (без кэширования)
    else Успех кэширования
        Cache -> API : Подтверждение кэширования
    end
    API -> Client : Возврат списка заказов
end

== Запись об изменении статуса заказа ==
Client -> API : Запрос изменения статуса заказа
API -> DB1 : Обновление статуса заказа
alt Ошибка обновления в DB1
    DB1 -> API : Ошибка обновления
    API -> Client : Подтверждение ошибки
else Успех обновления в DB1
    API -> DB2 : Обновление статуса заказа (резервная база)
    alt Ошибка обновления в DB2
        DB2 -> API : Ошибка обновления
        API -> DB1 : Откат изменений
        alt Ошибка отката в DB1
            DB1 -> API : Ошибка отката
            API -> Client : Подтверждение ошибки (ошибка отката)
        else Успех отката
            DB1 -> API : Подтверждение отката
            API -> Client : Подтверждение ошибки (обновление не выполнено)
        end
    else Успех обновления в DB2
        DB2 -> API : Подтверждение обновления
        API -> Cache : Инвалидация кэша
        alt Ошибка инвалидации
            Cache -> API : Ошибка инвалидации
            API -> Client : Подтверждение изменения статуса заказа (без инвалидации кэша)
        else Успех инвалидации
            Cache -> API : Подтверждение инвалидации
        end
        API -> Client : Подтверждение изменения статуса заказа
    end
end


@enduml
